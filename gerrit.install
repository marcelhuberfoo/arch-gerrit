#!/bin/sh
# vim:set ts=2 sw=2 et:

# arg 1:  the new package version
pre_install() {
  /bin/true
}

_set_dir_permissions() {
  echo ">>> Setting directory permissions..."
  for d in /var/lib/gerrit /srv/gerrit-review; do
    chown -R gerrit:gerrit ${d}
  done
}

# arg 1:  the new package version
post_install() {
  echo ">>> Creating gerrit user and group..."
  getent passwd gerrit > /dev/null || /usr/sbin/useradd --user-group --home-dir "/var/lib/gerrit/" --shell "/bin/bash" gerrit &> /dev/null
  _set_dir_permissions
  echo ">>> To initialize gerrit, see http://gerrit-documentation.googlecode.com/svn/Documentation/${1}/index.html"
  echo ">>> sudo su gerrit"
  echo ">>> java -jar /usr/share/java/gerrit/gerrit.war init -d /srv/gerrit-review"
}

# arg 1:  the new package version
# arg 2:  the old package version
pre_upgrade() {
  /bin/true
}

# arg 1:  the new package version
# arg 2:  the old package version
post_upgrade() {
  _set_dir_permissions
  echo ">>> To update gerrit, see http://gerrit-documentation.googlecode.com/svn/ReleaseNotes/ReleaseNotes-${1}.html"
  echo ">>> sudo su gerrit"
  echo ">>> java -jar /usr/share/java/gerrit/gerrit.war init -d /srv/gerrit-review"
}

# arg 1:  the old package version
pre_remove() {
 /bin/true
}

# arg 1:  the old package version
post_remove() {
  getent passwd gerrit > /dev/null && /usr/sbin/userdel gerrit &>/dev/null
  for d in /var/lib/gerrit /srv/gerrit-review; do
    if [ -d $d ]; then
      echo ">>> directory $d needs to be removed manually"
    fi
  done
}

